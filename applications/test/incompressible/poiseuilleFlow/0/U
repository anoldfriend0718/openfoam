/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

averageVel 0.1;
ly 0.1;

internalField   uniform ($averageVel 0 0);

boundaryField
{
    velocity-inlet
    {
        type            codedFixedValue;
    	value           uniform (0 0 0);
    	redirectType    parabolicProfile;
   
        code
            #{
                scalar U_0 =0.15; //1.50*$averageVel;
                scalar p_ctr = 0.05; // $ly/2.0; patch midpoint y-axis location
                scalar p_r = 0.05; // $ly/2.0  //patch semi-height or radius
                const fvPatch& boundaryPatch = patch(); 
                const vectorField& Cf = boundaryPatch.Cf(); 
                vectorField& field = *this; 

                forAll(Cf, faceI)
                {
                    field[faceI] = vector(U_0*(1-(pow(Cf[faceI].y()-p_ctr,2))/(p_r*p_r)),0,0); 
                }

        #};         

        codeOptions
        #{

                -I$(LIB_SRC)/finiteVolume/lnInclude \
                -I$(LIB_SRC)/meshTools/lnInclude

        #};

        codeInclude
        #{
                #include "fvCFD.H"
                #include <cmath>
                #include <iostream>
        #};
    }

    velocity-outlet
    {
        type            zeroGradient;
    }

    fixedWalls
    {
        type            noSlip;
    }

    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
